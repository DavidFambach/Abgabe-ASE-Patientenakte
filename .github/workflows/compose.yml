name: composeCI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  docker:
    defaults:
      env:
        AUTH_SERVICE_POSTGRES_DATABASE: ${{ env_compose.AUTH_SERVICE_POSTGRES_DATABASE }}
        AUTH_SERVICE_POSTGRES_USERNAME: ${{ env_compose.AUTH_SERVICE_POSTGRES_USERNAME }}
        AUTH_SERVICE_POSTGRES_PASSWORD: ${{ env_compose.AUTH_SERVICE_POSTGRES_PASSWORD }}
        AUTH_SERVICE_GOOGLE_CLIENT_ID: ${{ env_compose.AUTH_SERVICE_GOOGLE_CLIENT_ID }}
        AUTH_SERVICE_SOCIAL_SECRET: ${{ env_compose.AUTH_SERVICE_SOCIAL_SECRET }}
        AUTH_SERVICE_EMAIL_HOST_USER: ${{ env_compose.AUTH_SERVICE_EMAIL_HOST_USER }}
        AUTH_SERVICE_EMAIL_HOST_PASSWORD: ${{ env_compose.AUTH_SERVICE_EMAIL_HOST_PASSWORD }}
        FILE_SERVICE_POSTGRES_DATABASE: ${{ env_compose.FILE_SERVICE_POSTGRES_DATABASE }}
        FILE_SERVICE_POSTGRES_USERNAME: ${{ env_compose.FILE_SERVICE_POSTGRES_USERNAME }}
        FILE_SERVICE_POSTGRES_PASSWORD: ${{ env_compose.FILE_SERVICE_POSTGRES_PASSWORD }}
        DJANGO_SECRET: ${{ env_compose.DJANGO_SECRET }}

    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Start containers
      run: docker-compose -f "docker-compose.yml" up -d --build

    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down