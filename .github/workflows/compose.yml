name: composeCI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  docker:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Build Certificates
      run: |
        echo "${{ secrets.AUTHENTICATION_DB_CERT }}" >> ./Konfiguration/TLS Zertifikate/authentication-db-cert.pem
        echo "${{ secrets.AUTHENTICATION_DB_KEY }}" >> ./Konfiguration/TLS Zertifikate/authentication-db-key.pem
        echo "${{ secrets.AUTHENTICATION_SERVICE_HTTPS_CERT }}" >> ./Konfiguration/TLS Zertifikate/authentication-service-https-cert.pem
        echo "${{ secrets.AUTHENTICATION_SERVICE_HTTPS_KEY }}" >> ./Konfiguration/TLS Zertifikate/authentication-service-https-key.pem
        echo "${{ secrets.CA_CERT }}" >> ./Konfiguration/TLS Zertifikate/ca-cert.pem

    - name: Start containers
      run: docker-compose -f "docker-compose-TestCI.yaml" up
      env:
        AUTH_SERVICE_POSTGRES_DATABASE: ${{ secrets.AUTH_SERVICE_POSTGRES_DATABASE }}
        AUTH_SERVICE_POSTGRES_USERNAME: ${{ secrets.AUTH_SERVICE_POSTGRES_USERNAME }}
        AUTH_SERVICE_POSTGRES_PASSWORD: ${{ secrets.AUTH_SERVICE_POSTGRES_PASSWORD }}
        AUTH_SERVICE_GOOGLE_CLIENT_ID: ${{ secrets.AUTH_SERVICE_GOOGLE_CLIENT_ID }}
        AUTH_SERVICE_SOCIAL_SECRET: ${{ secrets.AUTH_SERVICE_SOCIAL_SECRET }}
        AUTH_SERVICE_EMAIL_HOST_USER: ${{ secrets.AUTH_SERVICE_EMAIL_HOST_USER }}
        AUTH_SERVICE_EMAIL_HOST_PASSWORD: ${{ secrets.AUTH_SERVICE_EMAIL_HOST_PASSWORD }}
        FILE_SERVICE_POSTGRES_DATABASE: ${{ secrets.FILE_SERVICE_POSTGRES_DATABASE }}
        FILE_SERVICE_POSTGRES_USERNAME: ${{ secrets.FILE_SERVICE_POSTGRES_USERNAME }}
        FILE_SERVICE_POSTGRES_PASSWORD: ${{ secrets.FILE_SERVICE_POSTGRES_PASSWORD }}
        DJANGO_SECRET: ${{ secrets.DJANGO_SECRET }}
        USER_UPDATE_QUEUE_USERNAME: ${{ secrets.USER_UPDATE_QUEUE_USERNAME }}
        USER_UPDATE_QUEUE_PASSWORD: ${{ secrets.USER_UPDATE_QUEUE_PASSWORD }}
        USER_UPDATE_QUEUE_EXCHANGE_NAME: ${{ secrets.USER_UPDATE_QUEUE_EXCHANGE_NAME }}

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose-TestCI.yaml" down