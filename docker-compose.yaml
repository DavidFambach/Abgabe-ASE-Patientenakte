version: "2.1"

services:
  auth_db:
    build:
      context: ./Konfiguration/Dockerfiles
      dockerfile: ssl-enabled-postgres.txt
    environment:
      - POSTGRES_DB=${AUTH_SERVICE_POSTGRES_DATABASE}
      - POSTGRES_USER=${AUTH_SERVICE_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${AUTH_SERVICE_POSTGRES_PASSWORD}
    networks:
      auth_db_net:
    restart: on-failure
    volumes:
      - auth_db_data:/var/lib/postgresql/data
      - ${PWD}/Konfiguration/TLS Zertifikate/authentication-db-cert.pem:/etc/postgresql/ssl/cert.pem
      - ${PWD}/Konfiguration/TLS Zertifikate/authentication-db-key.pem:/etc/postgresql/ssl/key.pem
  file_db:
    build:
      context: ./Konfiguration/Dockerfiles
      dockerfile: ssl-enabled-postgres.txt
    environment:
      - POSTGRES_DB=${FILE_SERVICE_POSTGRES_DATABASE}
      - POSTGRES_USER=${FILE_SERVICE_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${FILE_SERVICE_POSTGRES_PASSWORD}
    networks:
      file_db_net:
    restart: on-failure
    volumes:
      - file_db_data:/var/lib/postgresql/data
      - ${PWD}/Konfiguration/TLS Zertifikate/file-db-cert.pem:/etc/postgresql/ssl/cert.pem
      - ${PWD}/Konfiguration/TLS Zertifikate/file-db-key.pem:/etc/postgresql/ssl/key.pem
  
  auth_api:
    build: ./Authentifizierungsdienst
    depends_on:
      - auth_db
    ports:
      - mode: host
        protocol: tcp
        host_ip: 127.0.0.1
        published: 8000
        target: 80
      - mode: host
        protocol: tcp
        host_ip: 127.0.0.1
        published: 8010
        target: 443
    environment:
      - DEBUG=${DEBUG:-false}
      - GOOGLE_CLIENT_ID=${AUTH_SERVICE_GOOGLE_CLIENT_ID}
      - SOCIAL_SECRET=${AUTH_SERVICE_SOCIAL_SECRET}
      - SECRET_KEY=${DJANGO_SECRET}
      - POSTGRES_HOST=auth_db
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${AUTH_SERVICE_POSTGRES_DATABASE}
      - POSTGRES_USERNAME=${AUTH_SERVICE_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${AUTH_SERVICE_POSTGRES_PASSWORD}
      - EMAIL_HOST_USER=${AUTH_SERVICE_EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${AUTH_SERVICE_EMAIL_HOST_PASSWORD}
    networks:
      default:
      auth_db_net:
    restart: on-failure
    volumes:
      - ${PWD}/Konfiguration/TLS Zertifikate/ca-cert.pem:/etc/patientenakte/ssl/db-ca-cert.pem
      - ${PWD}/Konfiguration/TLS Zertifikate/authentication-service-https-cert.pem:/etc/nginx/ssl/cert.pem
      - ${PWD}/Konfiguration/TLS Zertifikate/authentication-service-https-key.pem:/etc/nginx/ssl/key.pem
  file_api:
    build: ./Dateiverwaltungsdienst
    depends_on:
      - file_db
    ports:
      - mode: host
        protocol: tcp
        host_ip: 127.0.0.1
        published: 8001
        target: 80
      - mode: host
        protocol: tcp
        host_ip: 127.0.0.1
        published: 8011
        target: 443
    environment:
      - DEBUG=${DEBUG:-false}
      - SECRET_KEY=${DJANGO_SECRET}
      - POSTGRES_HOST=file_db
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${FILE_SERVICE_POSTGRES_DATABASE}
      - POSTGRES_USERNAME=${FILE_SERVICE_POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${FILE_SERVICE_POSTGRES_PASSWORD}
    networks:
      default:
      file_db_net:
    restart: on-failure
    volumes:
      - ${PWD}/Konfiguration/TLS Zertifikate/ca-cert.pem:/etc/patientenakte/ssl/db-ca-cert.pem
      - ${PWD}/Konfiguration/TLS Zertifikate/file-service-https-cert.pem:/etc/nginx/ssl/cert.pem
      - ${PWD}/Konfiguration/TLS Zertifikate/file-service-https-key.pem:/etc/nginx/ssl/key.pem

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: "192.168.184.0/29"
  auth_db_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.184.8/29"
  file_db_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.184.16/29"

volumes:
  auth_db_data:
  file_db_data:
